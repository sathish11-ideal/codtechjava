import org.apache.mahout.cf.taste.impl.model.file.FileDataModel;
import org.apache.mahout.cf.taste.impl.neighborhood.NearestNUserNeighborhood;
import org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;
import org.apache.mahout.cf.taste.impl.similarity.PearsonCorrelationSimilarity;
import org.apache.mahout.cf.taste.model.DataModel;
import org.apache.mahout.cf.taste.neighborhood.UserNeighborhood;
import org.apache.mahout.cf.taste.recommender.RecommendedItem;
import org.apache.mahout.cf.taste.recommender.Recommender;
import org.apache.mahout.cf.taste.similarity.UserSimilarity;

import java.io.*;
import java.util.List;

public class RecommendationSystem {

    public static void main(String[] args) {
        try {
            // Step 1: Create sample data file
            String fileName = "data.csv";
            createSampleDataFile(fileName);

            // Step 2: Load data into Mahout model
            DataModel model = new FileDataModel(new File(fileName));

            // Step 3: Compute user similarity
            UserSimilarity similarity = new PearsonCorrelationSimilarity(model);

            // Step 4: Define neighborhood
            UserNeighborhood neighborhood = new NearestNUserNeighborhood(2, similarity, model);

            // Step 5: Create recommender
            Recommender recommender = new GenericUserBasedRecommender(model, neighborhood, similarity);

            // Step 6: Get recommendations for user ID 1
            int userId = 1;
            List<RecommendedItem> recommendations = recommender.recommend(userId, 3);

            // Step 7: Display results
            System.out.println("Recommendations for user " + userId + ":");
            for (RecommendedItem item : recommendations) {
                System.out.printf("Item ID: %d, Predicted Rating: %.2f%n", item.getItemID(), item.getValue());
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Helper to create sample data
    private static void createSampleDataFile(String fileName) throws IOException {
        String[] data = {
            "1,101,4.5",
            "1,102,3.0",
            "2,101,4.0",
            "2,103,2.5",
            "3,104,5.0",
            "3,101,4.0",
            "4,104,3.0",
            "4,105,4.5"
        };

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName))) {
            for (String line : data) {
                writer.write(line);
                writer.newLine();
            }
        }
    }
}
